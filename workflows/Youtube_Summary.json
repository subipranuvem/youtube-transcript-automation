{
  "name": "Youtube Summarizer",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "initialMessages": "Ol√°, Eu consigo resumir v√≠deos do Youtube.\n\nCole um link de um v√≠deo que irei resumi-lo pra voc√™!",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        100,
        320
      ],
      "id": "140afdc8-b297-4fa8-a672-4a1326137683",
      "name": "When chat message received",
      "webhookId": "6e8e31fe-9be3-49db-9489-e5f9a8ea9237"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a highly skilled AI assistant specialized in creating detailed and accurate summaries of YouTube videos. Your primary task is to generate comprehensive summaries based on video transcriptions, enriched with additional context and organized for clarity.\n\n**Workflow:**\n1. ALWAYS check if the user has provided a YouTube URL in their message.\n2. If a YouTube URL is present, IMMEDIATELY use the YouTube Video Transcription Retriever tool to fetch the transcription.\n3. If no YouTube URL is detected, politely ask the user to provide one.\n4. If the Video doesn't have a transcription, inform the user that the video can't be summarized.\n\n**Key Responsibilities:**\n1. **Summarize Videos:** Provide a complete summary of a YouTube video using its transcription. Include key points, main ideas, and any relevant context. You can use emojis to help with readability.\n2. **Interact with Users:** If the user does not provide a YouTube video URL, politely ask for it and guide them on how to share the link.\n3. **Language Handling:** Detect the language of the user's prompt. If the user provides content in a specific language, respond in that same language. If no language can be detected, default to Brazilian Portuguese.\n\n**Tools Available:**\n- **YouTube Video Transcription Retriever:** ALWAYS use this tool when a YouTube URL is provided. Fetch the transcription of a YouTube video using its Video ID or a Video URL and a list of preferred languages. This tool returns a 404 if the video doesn't has a transcription.\n\n**IMPORTANT:** Do not skip using the YouTube Video Transcription Retriever tool when a URL is provided. This is mandatory for creating accurate summaries.\n\n**Example Output:**\n- **If no URL is provided:**  \n  *\"Claro! Para come√ßar, por favor, forne√ßa o URL do v√≠deo do YouTube que voc√™ gostaria que eu resumisse. Depois que eu tiver o link, criarei um resumo detalhado para voc√™.\"*\n\n- **Summary Example:**  \n  *\"Aqui est√° um resumo do v√≠deo intitulado 'O Futuro da IA':*  \n  - *Tema Principal: O v√≠deo explora os avan√ßos na tecnologia de IA e seu potencial impacto na sociedade.*  \n  - *Pontos-chave:  \n    - A IA est√° transformando ind√∫strias como sa√∫de, educa√ß√£o e transporte.  \n    - Preocupa√ß√µes √©ticas, como vi√©s e privacidade, foram discutidas.  \n    - Especialistas preveem um crescimento significativo nas capacidades de IA na pr√≥xima d√©cada.*  \n  - *Contexto Adicional: O v√≠deo apresenta entrevistas com pesquisadores e profissionais l√≠deres da ind√∫stria de IA.\"*"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        580,
        320
      ],
      "id": "4ec02a11-1b5b-4028-a70e-697f1f253509",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-001",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        320,
        620
      ],
      "id": "fbc90a7d-4db2-4e24-995a-cd06e9d7f54b",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "sTOiaBjvX9X93EZI",
          "name": "Gemini API Key"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "GET a YouTube video transcript information given the Video ID or Videos URL and a list of preferred languages",
        "url": "=http://youtube_transcript_api:8001/youtube/transcript",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "preferred_languages"
            },
            {
              "name": "video_id",
              "valueProvider": "modelOptional"
            },
            {
              "name": "video_url",
              "valueProvider": "modelOptional"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "preferred_languages",
              "description": "A list of strings that you can inform the preferred language code, eg: en, br...",
              "type": "string"
            },
            {
              "name": "video_id",
              "description": "The YouTube Video ID to get the transcription",
              "type": "string"
            },
            {
              "name": "video_url",
              "description": "The YouTube Video URL to get the transcription",
              "type": "string"
            }
          ]
        },
        "optimizeResponse": true,
        "fieldsToInclude": "selected",
        "fields": "transcription,language,language_code,is_generated"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1080,
        600
      ],
      "id": "e146bff9-2ab2-480e-8ef8-a1a710716348",
      "name": "YouTube video transcription retriever"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        700,
        600
      ],
      "id": "3b7f2970-e231-43bb-84b2-c8db060336de",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "content": "## Entrada  \n\nEste **n√≥ de entrada** inicia a intera√ß√£o com o agente. Neste caso, trata-se de um **chat hospedado pelo pr√≥prio N8N**.  \n\nüîó **Acesse o chat** clicando no link abaixo:  \n[Iniciar conversa](http://localhost:5678/webhook/6e8e31fe-9be3-49db-9489-e5f9a8ea9237/chat)\n\n> Observa√ß√£o: N√£o esque√ßa de deixar o Workflow como \"Active\", caso contr√°rio, ao tentar acessar o chat um erro ser√° mostrado.",
        "height": 300,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "9a20065f-ce40-4428-ab96-45a6d7e604b7",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## LLM - O C√©rebro do Agente  \n\nPara este exemplo, escolhemos o **Google Gemini** como modelo de LLM para atuar como c√©rebro do agente, pois sua API pode ser testada gratuitamente. No entanto, √© poss√≠vel conectar outros modelos, como o **DeepSeek** ou o **GPT**.  \n\n### Configura√ß√£o da API  \n\nPara usar o **Google Gemini**, voc√™ precisar√° de uma **Chave de API** configurada.  \n\n- **Ainda n√£o tem uma chave?** Siga a documenta√ß√£o oficial: [Gerando uma chave de API](https://ai.google.dev/gemini-api/docs/api-key?hl=pt-br)  \n- **J√° tem uma chave?** Acesse-a diretamente neste link: [Google AI Studio](https://aistudio.google.com/app/apikey)  \n",
        "height": 460,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        220,
        760
      ],
      "id": "ba60f6d4-98bd-4d38-a107-70345cb9c1c8",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Mem√≥ria  \n\nO agente utiliza uma **mem√≥ria din√¢mica**, armazenada temporariamente dentro do pr√≥prio **N8N**. Isso significa que, ap√≥s a execu√ß√£o, os dados n√£o s√£o mantidos.  \n\nEssa mem√≥ria permite que o agente se lembre das intera√ß√µes recentes da conversa. Voc√™ pode pedir um **resumo** do di√°logo e continuar conversando sobre o conte√∫do, pois ele armazenar√° as **10 √∫ltimas mensagens**.  \n\n> üí° Se precisar de um hist√≥rico maior, basta editar o n√≥ e ajustar o valor na op√ß√£o **\"Context Window Length\"**. ",
        "height": 380,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        600,
        760
      ],
      "id": "e78654b7-fad3-488e-914f-5d15e9a2a922",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "Essa ferramenta obt√©m **transcri√ß√µes de v√≠deos do YouTube** atrav√©s de uma **API escrita em Python**.  \n\n### Como funciona?  \n- Ao receber um **ID** do v√≠deo ou uma **URL**, a API retorna a transcri√ß√£o do conte√∫do.  \n- Essa funcionalidade √© essencial, pois os modelos de LLM **n√£o t√™m acesso direto** √†s transcri√ß√µes do YouTube.  \n- Com essa ferramenta, conseguimos fornecer ao LLM o **texto falado no v√≠deo**, permitindo que ele **resuma o conte√∫do** de forma eficiente.  ",
        "height": 320,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        760
      ],
      "id": "e8620053-c5a4-4cce-8159-88e9711ea451",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "YouTube video transcription retriever": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a9d67dac-724b-4fb9-a7b8-bf0e632de38c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e7d8adec62619cd084d397c64c06b9ad3413addeac0da961f6a4217c082c3896"
  },
  "id": "4nWqIL95gx1kUNSQ",
  "tags": []
}